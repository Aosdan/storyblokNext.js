import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { storyblokInit, apiPlugin } from '@storyblok/react/rsc';
import StoryblokProvider from "./components/StoryblokProvider";
import Link from "next/link";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const initStoryblok = () => {
  const token = process.env.STORYBLOK_ACCESS_TOKEN;
  const region = process.env.STORYBLOK_REGION as "us" | "eu" | undefined;

  if (!token) {
    throw new Error(
      "Missing STORYBLOK_ACCESS_TOKEN. Set a preview token in your environment (e.g., .env.local) and restart the dev server."
    );
  };
  const cachedFetch = (input: RequestInfo | URL, init?: RequestInit): Promise<Response> => {
    return fetch (input, {
      ...init,
      cache: process.env.NODE_ENV === "development" ? "no-store" : "force-cache",
    });
  };

  storyblokInit({
    accessToken: token,
    use: [apiPlugin],
    apiOptions: {
      fetch: cachedFetch,
      region,
      cache: {
        type: 'none',
        clear: 'auto',
      },
    },
  });
};

initStoryblok();
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        <link
          rel="stylesheet"
          href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossOrigin=""
        />
      </head>
      <body 
        className={`${geistSans.variable} ${geistMono.variable} ` }>
        <header className="bg-white">
          <nav className="font-sans text-gray-600 font-bold container mx-auto px-50 pb-1 w-full py-4 flex justify-normal grid grid-flow-col justify-items-center ">
            <Link className="p-2 rounded-xl hover:bg-gray-300 text-gray " href={"/"}>Home</Link>
            <Link className="p-2 rounded-xl  hover:bg-gray-300 text-gray " href={"/tours"}>Tours</Link>
            <Link className="p-2 rounded-xl  hover:bg-gray-300 text-gray " href={"/about"}>About</Link>
          </nav>
        </header>
        <StoryblokProvider>
          {children}
        </StoryblokProvider>
      </body>
    </html>
  );
}